#!/bin/bash
#
# (c) Stephen Bates, 2023
#
# A simple script to initialize the directory tree for the Linux
# kernel source and setup the appropriate git remotes. If the
# directory exists we do an update fetch from the remotes.
#
# We check for any new stable tags and if new one(s) exist we checkout
# the latest one.

set -e

KERNEL_DIR=${KERNEL_DIR:-./src}
GIT_DEPTH=${GIT_DEPTH:-1}
CHECK_OUT=${CHECK_OUT:-no}

KERNEL_DIR=$(pwd)/${KERNEL_DIR}

GIT_REMOTE_LINUS=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
GIT_REMOTE_STABLE=https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
GIT_REMOTE_WSL2=https://github.com/microsoft/WSL2-Linux-Kernel.git

git_check_tag ()
{
    if git branch | grep stable | grep $1; then
	echo 1
    fi
    echo 0
}

git_kernel_init ()
{
    cd ${KERNEL_DIR}
    git init
    git remote add linus ${GIT_REMOTE_LINUS}
    git remote add stable ${GIT_REMOTE_STABLE}
    git remote add wsl2 ${GIT_REMOTE_WSL2}
}

git_kernel_update ()
{
    cd ${KERNEL_DIR}
    git fetch --all -j $(nproc) --no-show-forced-updates --depth=${GIT_DEPTH}
    NEWEST_TAG=$(git tag -l 'v*' --sort 'v:refname' | grep -v rc | tail -n 1)
    echo "  INFO: Newest stable tag detected is ${NEWEST_TAG}."
    if [[ $(git_check_tag ${NEWEST_TAG}) == "0" ]]; then
        if [ ${CHECK_OUT} == "yes" ]; then
            echo "  INFO: Checking out ${NEWEST_TAG} locally as stable-${NEWEST_TAG}."
	    git checkout -b stable-${NEWEST_TAG} ${NEWEST_TAG}
        else
            echo "  INFO: New tag (${NEWEST_TAG}) but skipping (CHECK_OUT=${CHECK_OUT})."
        fi
    else
        echo "  INFO: Local branch stable-${NEWEST_TAG} already exists."
    fi
}

if [ ! -d "${KERNEL_DIR}" ]; then
    echo "Creating kernel source in ${KERNEL_DIR}..."
    mkdir -p ${KERNEL_DIR}
    git_kernel_init ${KERNEL_DIR}
else
    echo "Kernel source folder (${KERNEL_DIR}) already exists. Updating..."
fi
git_kernel_update ${KERNEL_DIR}
